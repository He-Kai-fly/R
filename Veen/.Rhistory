c3[c3$group==2&c3$variable=="A","variable2"]<-1.185
c3[c3$group==2&c3$variable=="B","variable2"]<-2.185
c3[c3$group==2&c3$variable=="C","variable2"]<-3.185
c3[c3$group==2&c3$variable=="D","variable2"]<-4.185
c3[c3$group==2&c3$variable=="E","variable2"]<-5.185
p1<-ggplot(b)+
geom_boxplot(aes(x=variable,y=value,fill=group),width=0.6,position = position_dodge(0.8),outlier.size = 0,outlier.color = "white")+
scale_fill_manual(values = c("green", "blue"),breaks=c("1","2"),labels=c("Group 1","Group 2"))+
geom_point(data=c3,aes(x=variable2,y=value,color=group),shape=15,size=1)+
geom_line(data=c3,aes(x=variable2,y=value,color=group),size=1,linetype = "dotted")+
# geom_smooth(data=c3,aes(x=variable2,y=value,color=group),size=1,linetype = "dashed")+
# stat_summary(fun.y = mean, geom = "errorbar", aes(x=variable,y=value,ymax = ..y.., ymin = ..y..,color=group),width = .75, linetype = "dashed")
xlab("")+
ylab("")+
scale_y_continuous(limits = c(0,110),breaks=seq(0,110,5)) +
geom_signif(stat="identity",
data=data.frame(x=c(0.795,1.795,2.795,3.795,4.795), xend=c(1.185, 2.185,3.185,4.185,5.185),
y=c(106,66,70,30,35), annotation=c("***", " *** ","  ***  ","    **    ","*")),
aes(x=x,xend=xend, y=y, yend=y, annotation=annotation)) +
theme_classic()+
theme(
legend.position = "top",
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
axis.text.x=element_text(size=rel(1.1),face="bold"),
axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
panel.border = element_blank(),
panel.grid = element_blank()
)+
guides(color=FALSE)
p1
graph2ppt(file="effect plot.pptx", width=7, height=5)
library(export)
graph2ppt(file="effect plot.pptx", width=7, height=5)
library(MASS)
library(plyr)
cabbages
ca <- ddply(cabbages,c("Cult","Date"),summarise,
Weight = mean(HeadWt , na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = sum(!is.na(HeadWt)),
se = sd/sqrt(n))
ca
View(ca)
cabbages
cabbages
source("https://bioconductor.org/biocLite.R")
biocLite('org.Hs.eg.db')
geneIDannotation <- function(geneLists=c(1,2,9),name=T,map=T,ensemble=F,accnum=F){
## input ID type : So far I just accept entrezID or symbol
## default, we will annotate the entrezID and symbol, chromosone location and gene name
suppressMessages(library("org.Hs.eg.db"))
all_EG=mappedkeys(org.Hs.egSYMBOL)
EG2Symbol=toTable(org.Hs.egSYMBOL)
if( all(! geneLists %in% all_EG) ){
inputType='symbol'
geneLists=data.frame(symbol=geneLists)
results=merge(geneLists,EG2Symbol,by='symbol',all.x=T)
}else{
inputType='entrezID'
geneLists=data.frame(gene_id=geneLists)
results=merge(geneLists,EG2Symbol,by='gene_id',all.x=T)
}
if ( name ){
EG2name=toTable(org.Hs.egGENENAME)
results=merge(results,EG2name,by='gene_id',all.x=T)
}
if(map){
EG2MAP=toTable(org.Hs.egMAP)
results=merge(results,EG2MAP,by='gene_id',all.x=T)
}
if(ensemble){
EG2ENSEMBL=toTable(org.Hs.egENSEMBL)
results=merge(results,EG2ENSEMBL,by='gene_id',all.x=T)
}
if(accnum){
EG2accnum=toTable(org.Hs.egREFSEQ)
results=merge(results,EG2MAP,by='gene_id',all.x=T)
}
return(results)
}
geneIDannotation()
geneIDannotation(c('TP53','BRCA1','KRAS','PTEN'))
geneIDannotation(c('TP53','BRCA1','KRAS','YEAO'))
geneIDannotation()
#source("https://bioconductor.org/biocLite.R")
#biocLite('org.Hs.eg.db')
#基因的entrez ID 跟symbol等其它ID的转换程序
geneIDannotation <- function(geneLists=c(1,2,9),name=T,map=T,ensemble=F,accnum=F){
## input ID type : So far I just accept entrezID or symbol
## default, we will annotate the entrezID and symbol, chromosone location and gene name
suppressMessages(library("org.Hs.eg.db"))
all_EG=mappedkeys(org.Hs.egSYMBOL)
EG2Symbol=toTable(org.Hs.egSYMBOL)
if( all(! geneLists %in% all_EG) ){
inputType='symbol'
geneLists=data.frame(symbol=geneLists)
results=merge(geneLists,EG2Symbol,by='symbol',all.x=T)
}else{
inputType='entrezID'
geneLists=data.frame(gene_id=geneLists)
results=merge(geneLists,EG2Symbol,by='gene_id',all.x=T)
}
if ( name ){
EG2name=toTable(org.Hs.egGENENAME)
results=merge(results,EG2name,by='gene_id',all.x=T)
}
if(map){
EG2MAP=toTable(org.Hs.egMAP)
results=merge(results,EG2MAP,by='gene_id',all.x=T)
}
if(ensemble){
EG2ENSEMBL=toTable(org.Hs.egENSEMBL)
results=merge(results,EG2ENSEMBL,by='gene_id',all.x=T)
}
if(accnum){
EG2accnum=toTable(org.Hs.egREFSEQ)
results=merge(results,EG2MAP,by='gene_id',all.x=T)
}
return(results)
}
geneIDannotation()
geneIDannotation(c('TP53','BRCA1','KRAS','YEAO'))
#source("https://bioconductor.org/biocLite.R")
#biocLite('org.Hs.eg.db')
#基因的entrez ID 跟symbol等其它ID的转换程序
keytypes(org.Hs.eg.db)
ensids <- c("ENSG00000130720", "ENSG00000103257", "ENSG00000156414",
"ENSG00000144644", "ENSG00000159307", "ENSG00000144485")
cols <- c("SYMBOL", "GENENAME")
select(org.Hs.eg.db, keys=ensids, columns=cols, keytype="ENSEMBL")
select(org.Hs.eg.db, keys="BRCA1", columns=c("ENSEMBL","UNIGENE","ENTREZID","CHR","GO","GENENAME"), keytype="SYMBOL")
library(multcomp)
attach(cholesterol)
table(trt)
View(geneIDannotation)
trt
ibrary(mygene)
install.packages(mygene)
biocLite('mygene')
library(mygene)
res<-query('NM_030621', fields='go', species='human')$hits
lapply(res, as.list)
View(res)
library(gdata)
library(ggplot2)
library(ggpubr)
library(agricolae)
library(vegan)
head(iris)
attach(iris)
df <- iris[,c(1,2,3)]
head(df)
df <- subset(iris,select = c(1,2,4:5))
View(df)
atttibutes(iris)
attributes(iris)
class(iris)
colnames(iris)
rownames(iris)
print(iris)
head(iris)
print(iris)
rownames(iris)
iris[1,3]
head(iris)
iris[2,3]
iris[4,3]
iris[4,4]
iris[1,1]
head(iris)
dim(iris)
head(iris)
df <- subset(iris,select = c(1,2,4:5))
summary(iris)
iris_1 <- (iris[,-5])
View(iris_1)
head(apply(iris_1,1,mean))
head(apply(iris_1,2
,mean))
View(iris_1)
apply(iris_1,2
,mean)
apply(iris_1,1
,mean)
apply(iris_1,1,mean)
iris_1 <- (iris[1:5,-5])
iris_1 <- (iris[1:6,-5])
apply(iris_1,1,mean)
apply(iris_1,2,mean,na.rm = TRUE)
tab
ab <- apply(iris_1,2,function(x){x/sum(x)})
View(ab)
ab <- apply(iris_1[,1:ncol(tab)-1],2,function(x){x/sum(x)})
ab <- apply(iris_1[,1:ncol(iris_1)-1],2,function(x){x/sum(x)})
View(ab)
ab1 <- iris_1[apply(ab,1,max)>0.01,]
View(ab1)
View(ab)
View(ab1)
View(ab)
View(ab1)
View(ab)
apply(iris_1,1,mean)
apply(iris_1,2,mean,na.rm = TRUE)
apply(iris_1,1,mean,na.rm = TRUE)
apply(iris_1,2,mean)
ab <- apply(iris_1,2,function(x){x/sum(x)})
View(ab)
View(ab)
ab1 <- iris_1[apply(ab,1,max)>0.01,]
View(ab1)
View(ab)
View(ab1)
tab perc<-apply(tab,2,function(x){x/sum(x)})
ab <- apply(iris_1,2,function(x){x/sum(x)})
View(ab)
ab1 <- iris_1[apply(ab,1,max)>0.01,]
View(ab1)
View(ab)
summary(iris)
apply(iris_1,1,mean)
apply(iris,2,mean)
apply(iris,2,mean,na.rm = TRUE)
apply(iris_1,1,mean,na.rm = TRUE)
View(iris_1)
iris_1 <- (iris[,-5])
View(iris_1)
apply(iris_1,2,mean)
summary(iris)
`1` <- read.csv("~/1.png", sep="")
View(`1`)
ab <- apply(iris_1,2,function(x){x/sum(x)})
View(ab)
ab1 <- iris_1[apply(ab,1,max)>0.01,]
View(ab1)
ab2 <- iris_1[apply(ab,1,min)>0.01,]
View(ab2)
ab1 <- iris_1[apply(ab,1,max)>0.001,]
ab1 <- iris_1[apply(ab,1,max)>0.1,]
ab1 <- iris_1[apply(ab,1,max)>0.001,]
hk <- apply(ab1,2,function(x){x/sum(x)})
View(hk)
ab1 <- iris_1[apply(ab,1,max)>0.01,]
hk <- apply(ab1,2,function(x){x/sum(x)})
View(hk)
summary(hk)
apply(hk,2,sum)
ab2 <- iris_1[apply(ab,1,min)>0.01,]
ab2 <- iris_1[apply(ab,1,min)>0.1,]
ab2 <- iris_1[apply(ab,1,min)>0.001,]
ab2 <- iris_1[apply(ab,1,min)>0.01,]
library(statmod)
Data.filter(data, order.type = “sample”, minReads = 1000, numTaxa = 10,
perTaxa = NULL)
filter_Buty
qplot(carat,data=diamonds.geom = "histogram")
qplot(carat,data=diamonds,geom = "histogram")
qplot(carat,data = diamonds,geom = "histogram")
qplot(carat,data = diamonds,geom = "histogram")
library((splines))
library(splines)
qplot(carat,data = diamonds,geom = "histogram")
boxplot(write * female,data=hsb2demo, main="High School
Students Data", xlab="Gender", ylab="Writing score by gender")
boxplot(write~female,data=hsb2demo, main="High School
Students Data", xlab="Gender", ylab="Writing score by gender")
qplot(x=mpg, y=wt, data=df, geom = "point")
library(ggplot2)
qplot(x=mpg, y=wt, data=df, geom = "point")
ggplot(data=df, aes(x=mpg, y=wt))+   geom_point()
ggplot(data=df, aes(x=mpg, y=wt))+   geom_point()
ggplot(mpg, aes(x=mpg, y=wt))+   geom_point()
df <- mtcars[, c("mpg","cyl","wt")]
ggplot(df, aes(x=mpg, y=wt))+   geom_point()
View(df)
library(reshape2)
df_melt <- melt(df)
View(df)
View(df_melt)
boxplot(df_melt)
boxplot(df)
qplot()
qplot(sex, weight, data = wdata, geom = "violin")
demo(graphics)
pdf("mygraph. pdf")
attach(mtcars)
plot(wt, mpg)
abline(1m(mpg~wt))
title("Regression of MPG on Weight")
plot(dose,drug,type = b)
dose <- c(20,30,50)
drug <- c(16,20,30)
plot(dose,drug,type = b)
plot(dose,drug,type = b)
plot(dose,drug,type = "b")
plot
plot(dose,drug,type = "b")
attach(mtcars)
opar <-par(no. readonly=TRUE)
par(mfrow=c(2,2))
plot(wt, mpg, main="Scatterplot of wt vs. mpg")
plot(wt, disp, main="Scatterplot of wt vs disp")
hist(wt, main="Histogram of wt")
boxplot(wt, main="Boxplot of wt")
par(opar)
detach(mtcars)
hist(mtcars$mpg,breaks=10)
hist(mtcars$mpg,breaks=10)
exp(2)
log(4,base = 2)
mydata <- (rnorm=(30),nrow=6)
mydata <- matrix(rnorm=(30),nrow=6)
mydata <- matrix(rnorm=(30),nrow=6)
mydata <- matrix(rnorm=(30), nrow=6)
ehkai <- matrix(rnorm(30),nrow = 6)
View(ehkai)
ehkai <- as.data.frame(ehkai)
View(ehkai)
apply(ehkai,1,sum)
he <- apply(ehkai,1,sum)
str(ehkai)
str(he)
class(he)
options(digits = 2)
ehkai <- rbind(ehekai,he)
ehkai <- rbind(ehkai,he)
View(ehkai)
ehkai <- cbind(ehkai,he)
for (i in 1:10) print("HELLO")
he <- apply(ehkai,1,sd)
ehkai <- rbind(ehkai,he)
View(ehkai)
attach(mtcars)
aggdata <- aggregate(mtcars,by=list(cyl,gear),FUN=mean,na.rm=TRUE)
mtcars
View(aggdata)
View(aggdata)
describe(mtcars[vars])
describe
library(psych)
describe(mtcars[vars])
mtcars
describe(mtcars[mpg])
vars <- c("mpg","hp"."wt")
vars <- c("mpg","hp","wt")
head(mtcars[vars])
describe(mtcars[vars])
head(mtcars[mpg])
head(mtcars[1])
vars <- c("1")
head(mtcars[vars])
library('VennDiagram')
x <- c(1,3,5,7,9,11,17,19,21,23,25,29,31,33,37,39,41,47,49,51,57,59)
y <- c(1,3,5,7,13,17,19,21,23,25,27,29,31,33,45,47,51)
z <- c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,55,57,59,61)
venn.diagram(list(X=x,Y=y,Z=z),fill=c("red","blue","yellow"),"out.tiff")
len(x)
length(x)
library(ggplot2) # This example uses the ChickWeight dataset, which comes with ggplot2
# First plot
p1 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) + geom_line() + ggtitle("Growth curve for individual chicks")
# Second plot
p2 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) + geom_point(alpha=.3) + geom_smooth(alpha=.2, size=1) + ggtitle("Fitted growth curve per diet")
# Third plot
p3 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet)) + geom_density() + ggtitle("Final weight, by diet")
# Fourth plot
p4 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) + geom_histogram(colour="black", binwidth=50) + facet_grid(Diet ~ .) + ggtitle("Final weight, by diet") + theme(legend.position="none") # No legend (redundant in this graph)
multiplot(p1, p2, p3, p4, cols=2)
p4
p3
multiplot(p1, p2, p3, p4, cols=2)
# First plot
ChickWeight
p1
92
p2
# Second plot
p2 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) + geom_point(alpha=.3) + geom_smooth(alpha=.2, size=1) + ggtitle("Fitted growth curve per diet")+theme_classic()
p2
# Fourth plot
p4 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) + geom_histogram(colour="black", binwidth=50) + facet_grid(Diet ~ .) + ggtitle("Final weight, by diet") + theme(legend.position="none") # No legend (redundant in this graph)
p4
multiplot(p1, p2, p3, p4, cols=2)
# First plot
ChickWeight
# Fourth plot
he <- subset(ChickWeight,Time==21)
View(he)
# First plot
ChickWeight
# Fourth plot
he <- subset(ChickWeight,Time==5)
View(he)
# First plot
ChickWeight
# Fourth plot
he <- subset(ChickWeight,Time==4)
View(he)
attach(iris)
df <- data.frame(Sepal.Width, Petal.Length, Petal.Width)
View(df)
detach(iris)
df <- data.frame(Sepal.Width, Petal.Length, Petal.Width)
attach(iris)
df <- data.frame(Sepal.Width, Petal.Length, Petal.Width)
View(df)
detach(iris)
df <- data.frame(Sepal.Width, Petal.Length, Petal.Width)
library(statnet)
library(circlize)
rm(list = ls())
setwd('E:/Study/Bioinformation/Script/Veen')
rm(list = ls())
setwd('E:/Study/Bioinformation/Script/Veen')
#制作 2<=样本数<=5
veen_dat <- read.delim('venn.txt',header = T,sep = '\t',stringsAsFactors = F,check.names = F)
veen_list <- list(veen_dat[,1],veen_dat[,2])
names(veen_list) <- colnames(veen_dat)
View(veen_list)
View(veen_dat)
library(VeenDiagram)
library(VennDiagram)
venn.diagram(venn_list,filename = "hekai.tiff",imagetype = 'tiff',margin = 0.2
,fill = c('yellow',"green"),alpha = 0.5,col='black',cex = 1
,fontfamily = 'serif',cat.col = c('black', 'black'), cat.cex = 1, cat.fontfamily = 'serif')
venn.diagram(veen_list,filename = "hekai.tiff",imagetype = 'tiff',margin = 0.2
,fill = c('yellow',"green"),alpha = 0.5,col='black',cex = 1
,fontfamily = 'serif',cat.col = c('black', 'black'), cat.cex = 1, cat.fontfamily = 'serif')
BCI
library(vegan)
data(BCI)
View(BCI)
sp1 <- specaccum(BCI, method="random")
View(sp1)
boxplot(sp1, col="pink", add=TRUE, pch="+")
plot(sp1, ci.type="poly", col="blue", lwd=2, ci.lty=0, ci.col="lightblue")
boxplot(sp1, col="pink", add=TRUE, pch="+")
colors <- colorRampPalette(c("blue", "red"))(5)
colors
barplot(1:4, col = rainbow(4), border = NA, main = "border = NA")
barplot(1:4, col = rainbow(4), main = "border = NA")
border = NA
barplot(1:4, col = rainbow(4), border = NA, main = "border = NA")
setwd('E:\\Study\\Bioinformation\\Script\\Veen')
####花瓣图
library(plotrix)
install.packages('plotrix')
rm(list = ls())
####花瓣图
library(plotrix)
#读入做图文件，预处理
flower_dat <- read.delim('flower.txt', header = T, sep = '\t', stringsAsFactors = F, check.names = F)
View(flower_dat)
sample_id <- colnames(flower_dat)
otu_id <- unique(flower_dat[,1])
otu_id <- otu_id[otu_id != '']
core_otu_id <- otu_id
otu_num <- length(otu_id)
ellipse_col <- c('#6181BD4E','#F348004E','#64A10E4E','#9300264E','#464E044E','#049a0b4E','#4E0C664E','#D000004E','#FF6C004E','#FF00FF4E','#c7475b4E','#00F5FF4E','#BDA5004E','#A5CFED4E','#f0301c4E','#2B8BC34E','#FDA1004E','#54adf54E','#CDD7E24E','#9295C14E')
for (i in 2:ncol(flower_dat)) {
otu_id <- unique(flower_dat[,i])
otu_id <- otu_id[otu_id != '']
core_otu_id <- intersect(core_otu_id, otu_id)
otu_num <- c(otu_num, length(otu_id))
}
core_num <- length(core_otu_id)
#构建作图函数（参考自 https://www.cnblogs.com/xudongliang/p/7884667.html）
flower_plot <- function(sample, otu_num, core_otu, start, a, b, r, ellipse_col, circle_col) {
par( bty = 'n', ann = F, xaxt = 'n', yaxt = 'n', mar = c(1,1,1,1))
plot(c(0,10),c(0,10),type='n')
n   <- length(sample)
deg <- 360 / n
res <- lapply(1:n, function(t){
draw.ellipse(x = 5 + cos((start + deg * (t - 1)) * pi / 180),
y = 5 + sin((start + deg * (t - 1)) * pi / 180),
col = ellipse_col[t],
border = ellipse_col[t],
a = a, b = b, angle = deg * (t - 1))
text(x = 5 + 2.5 * cos((start + deg * (t - 1)) * pi / 180),
y = 5 + 2.5 * sin((start + deg * (t - 1)) * pi / 180),
otu_num[t])
if (deg * (t - 1) < 180 && deg * (t - 1) > 0 ) {
text(x = 5 + 3.3 * cos((start + deg * (t - 1)) * pi / 180),
y = 5 + 3.3 * sin((start + deg * (t - 1)) * pi / 180),
sample[t],
srt = deg * (t - 1) - start,
adj = 1,
cex = 1
)
} else {
text(x = 5 + 3.3 * cos((start + deg * (t - 1)) * pi / 180),
y = 5 + 3.3 * sin((start + deg * (t - 1)) * pi / 180),
sample[t],
srt = deg * (t - 1) + start,
adj = 0,
cex = 1
)
}
})
draw.circle(x = 5, y = 5, r = r, col = circle_col, border = NA)
text(x = 5, y = 5, paste('Core:', core_otu))
}
#作图
png('hekai.png', width = 1500, height = 1500, res = 200, units = 'px')
flower_plot(sample = sample_id, otu_num = otu_num, core_otu = core_num,
start = 90, a = 0.5, b = 2, r = 1, ellipse_col = ellipse_col, circle_col = 'red')
dev.off()
